Arch Dual Boot on g14 Installation:
	1. follow default installation. 
		note 1: in iwctl, wlan0 scan, then wlan0 get-networks. connecting, enter wlan0 connect ssid, then the password.
		note 2: when pacstrapping, do $ pacstrap /mnt base linux-g14 linux-g14-headers linux-firmware
	2. mount efi system partition to /mnt/boot/efi
	3. mount windows partition to a folder before genfstab
	4. arch-chroot into mount, connect to network and $ pacman -S ntfs-3g. vim /etc/fstab and change window partition's format to ntfs-3g
	5. continue default installation.
	6. at end, $ pacman -S grub efibootmgr os-prober
	7. grub-install --target=x86_64=efi --efi-directory=/boot/efi --bootloader-id=GRUB
	8. vim /etc/default/grub and add the line so that os-prober will be executed to detect windows partition whie grub makes its cfg:
		GRUB_DISABLE_OS_PROBER=false
	9. also might as well:
		uncomment GRUB_SAVEDEFAULT=true
		set GRUB_DEFAULT=saved
		remove "quiet" grom GRUB_CMDLINE_LINUX_DEFAULT
	10. $ grub-mkconfig -o /boot/grub/grub.cfg 
	11.	reboot
	Note: maybe do all these, or at least the drivers, one by one and check to make sure they all work and stuff.
	12. install:
		programs: alacritty firefox rofi man-db sudo 
		tools: xorg-xinput xorg-xrandr
		display: xorg-server lightdm lightdm-gtk-greeter lightdm-gtk-greeter-settings i3(1 3 4 5)
		network: networkmanager
		note: so far, going directly into i3 has come with a lot of mishaps, so perhaps install plasma plasma-wayland-sesson [kde applications] first and run random stuff there so that things like audio can get auto configured
	13. systemctl enable NetworkManager.service && systemctl enable lightdm.service
	14. reboot
	15. install all others in packages.txt. try installing nvidia-dkms before asusctl and see if that fixes asusctl methoderror. 
	16. if all works and you move back to i3, make sure you copy all files from the windows save to ~/
	17. see saved bookmarks in windows firefox for additional diagnostics

LightDM not running at boot:
	force lightdm to wait for graphics drivers: go to /etc/lightdm/lightdm.conf and add:
		[LightDM]
		logind-check-graphical=true

Checking if GPUs are detected: $ xrandr --listproviders

Installing Spotify:
	run $ gpg --keyserver keyserver.ubuntu.com --recv-keys <unknown public key from error>

[No longer needed - just make sure nvidia-dkms is running] Running steam games:
    include "PROTON_USE_WINED3D=1 %command%" in launch options for DirectX11 (3D) games and run it off proton compatibility

To list packages discluding base-devel & base:
  $ expac -H M "%011m\t%-20n\t%10d" $(comm -23 <(pacman -Qqen | sort) <({ pacman
-Qqg base-devel; expac -l '\n' '%E' base; } | sort | uniq)) | sort -n

